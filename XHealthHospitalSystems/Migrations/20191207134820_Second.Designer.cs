// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using XHealthHospitalSystems.Models;

namespace XHealthHospitalSystems.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20191207134820_Second")]
    partial class Second
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("XHealthHospitalSystems.Models.Diagnosis", b =>
                {
                    b.Property<int>("DiagnosisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("Date");

                    b.Property<string>("Diagnosiss")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<string>("MedsPres")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<string>("Symtoms")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<string>("TestsPres")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.HasKey("DiagnosisId");

                    b.HasIndex("PatientId");

                    b.ToTable("Diagnoses");
                });

            modelBuilder.Entity("XHealthHospitalSystems.Models.Doctor", b =>
                {
                    b.Property<int>("DoctorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Qualification")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<string>("RegNo")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("VDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("DoctorId");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("XHealthHospitalSystems.Models.Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<string>("BloodType")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("EmgrCont")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("NIC")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TelNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("PatientId");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("XHealthHospitalSystems.Models.Diagnosis", b =>
                {
                    b.HasOne("XHealthHospitalSystems.Models.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
